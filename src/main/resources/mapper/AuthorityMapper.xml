<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zq.backstage.dao.AuthorityMapper" >
  <resultMap id="BaseResultMap" type="cn.zq.backstage.domain.Authority" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="describe" property="describe" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="module" property="module" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" javaType="DATETIME" />
    <result column="update_time" property="updateTime" javaType="DATETIME" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, describe, status, module, role_id ,create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account_authority
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account_authority
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.zq.backstage.domain.Authority" >
    insert into account_authority (id, describe, status, 
      module, role_id)
    values (#{id,jdbcType=INTEGER}, #{describe,jdbcType=CHAR}, #{status,jdbcType=TINYINT}, 
      #{module,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.zq.backstage.domain.Authority" >
    insert into account_authority
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="describe != null" >
        describe,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zq.backstage.domain.Authority" >
    update account_authority
    <set >
      <if test="describe != null" >
        describe = #{describe,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="module != null" >
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zq.backstage.domain.Authority" >
    update account_authority
    set describe = #{describe,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      module = #{module,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getList" resultMap="BaseResultMap">
    select * from account_authority
  </select>
</mapper>